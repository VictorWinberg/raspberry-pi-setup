# Ports
#
# 3000 - app
# 3001 - www
# 3004 - shop
# 3008 - wishlist.ml
# 3009 - fgg
# 3010 - menu
# 3011 - ces
# 8123 - home
# 9080 - cloud

##################
# Default server #
##################
server {
  listen 443 default_server ssl;
  server_name _;

  ssl_certificate /etc/letsencrypt/live/zolly.ml/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/zolly.ml/privkey.pem; # managed by Certbot
}

##########
# Routes #
##########

# Home Page :: 3001 - www
#
server {
  listen 443;
  server_name www.zolly.ml;

  location / {
    proxy_pass http://localhost:3001;
  }
}

server {
  listen 443;
  server_name zolly.ml;

  location / {
    return 301 https://www.zolly.ml;
  }
}

# OneList :: 3004 - shop
#
server {
  listen 443;
  server_name shop.zolly.ml;

  location / {
    proxy_pass http://localhost:3004;

    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

# Wishlist :: 3008 - wishlist.ml
#
server {
  listen 443;
  server_name www.wishlist.ml;

  location / {
    proxy_pass http://localhost:3008;
  }
}

server {
  listen 443;
  server_name wishlist.ml;

  location / {
    return 301 https://www.wishlist.ml;
  }
}

# FGG :: 3009 - fgg
#
server {
  listen 443;
  server_name fgg.zolly.ml;

  location / {
    proxy_pass http://localhost:3009;
  }
}

# OneMenu :: 3010 - menu
#
server {
  listen 443;
  server_name menu.zolly.ml;

  location / {
    proxy_pass http://localhost:3010;

    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

# CES :: 3011 - ces
#
server {
  listen 443;
  server_name ces.zolly.ml;

  location / {
    proxy_pass http://localhost:3011;
  }
}

# Home Assistant :: 8123 - home
#
server {
  listen 443;
  server_name home.zolly.ml;

  location / {
    proxy_pass http://localhost:8123;
    proxy_set_header Host $host;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /api/websocket {
    proxy_pass http://localhost:8123/api/websocket;
    proxy_set_header Host $host;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
}

# Nextcloud :: 9080 - cloud
#
server {
  listen 443;
  server_name cloud.zolly.ml;

  # set max upload size
  client_max_body_size        10G;
  client_body_buffer_size     400M;

  location / {
    proxy_pass http://localhost:9080;
    proxy_set_header Host $host;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}

##########################
# Redirect HTTP to HTTPS #
##########################
server {
  listen 80;

  location ~ /.well-known {
    root /var/www/html;
    index index.html;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

################################
# Default server configuration #
################################
#server {
	#listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;

	# Add index.php to the list if you are using PHP
	#index index.html index.htm index.nginx-debian.html;

	#server_name _;

	#location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
	#}

	# pass PHP scripts to FastCGI server
	
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.3-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
#}

