{
  "version": 1,
  "minor_version": 1,
  "key": "lovelace.dashboard_2_0",
  "data": {
    "config": {
      "title": "Dashboard 2.0",
      "views": [
        {
          "path": "default_view",
          "title": "Dashboard",
          "theme": "dashboard",
          "type": "panel",
          "cards": [
            {
              "type": "custom:mod-card",
              "card_mod": {
                "style": ":host {\n  --primary-color-rgb: 85, 177, 242;\n  --primary-color: rgb(var(--primary-color-rgb));\n}\nha-card {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background: radial-gradient(circle, rgba(var(--primary-color-rgb), 30%) 0%, black 100%);\n  background-size: 100% 100%, 150px 150px;\n  background-image: \n    radial-gradient(circle, rgba(var(--primary-color-rgb), 30%) 0%, black 100%),\n    linear-gradient(transparent 0%, transparent 99%, rgba(255, 255, 255, 0.1) 99%),\n    linear-gradient(90deg, transparent 0%, transparent 99%, rgba(255, 255, 255, 0.1) 99%);\n  background-position: 0 0, 0 0, 0 0;\n  background-size: 100% 100%, 150px 150px, 150px 150px;\n  background-blend-mode: overlay;\n}\n"
              },
              "card": {
                "type": "horizontal-stack",
                "cards": [
                  {
                    "type": "markdown",
                    "content": "{{ now().strftime('%H:%M') }}\n",
                    "card_mod": {
                      "style": ":host {\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n}  ha-card {\n  background: none;\n  font-family: 'Digital-7', sans-serif;\n  font-size: 480px;\n  line-height: 1;\n  color: var(--primary-color);\n  text-shadow: 0 0 10px currentColor;\n  text-align: center;\n}\n"
                    }
                  },
                  {
                    "type": "markdown",
                    "content": "{{ now().strftime(\"%a, %d %b\") }}\n",
                    "card_mod": {
                      "style": ":host {\n  position: absolute;\n  bottom: 0;\n  left: 20px;\n} ha-card {\n  background: none;\n  font-family: 'Digital-7', sans-serif;\n  font-size: 100px;\n  line-height: 1;\n  color: var(--primary-color);\n  text-shadow: 0 0 10px currentColor;\n  text-align: left;\n}\n"
                    }
                  },
                  {
                    "type": "custom:mod-card",
                    "card": {
                      "entity": "input_number.light_brightness",
                      "full_row": true,
                      "hide_state": true,
                      "type": "custom:slider-entity-row"
                    },
                    "card_mod": {
                      "style": {
                        ".": "ha-card {\n  position: absolute;\n  left: 36px;\n  bottom: 128px;\n  width: 450px;\n  font-size: 100px;\n  line-height: 1;\n}\n",
                        "slider-entity-row$": {
                          "ha-slider$": ":host {\n  --md-slider-inactive-track-height: 8px;\n  --md-slider-active-track-height: 8px;\n  z-index: 1;\n}\n.handleNub {\n  width: 2rem !important;\n  height: 2rem !important;\n}\n"
                        }
                      }
                    }
                  },
                  {
                    "type": "custom:floorplan-card",
                    "card_mod": {
                      "style": ":host {\n  position: absolute;\n  top: 200px;\n  right: 0;\n  left: 0;\n  bottom: 0;\n} ha-card {\n  display: flex;\n  margin: 0 auto;\n  background: none;\n  box-shadow: none;\n  height: 100%;\n}\n"
                    },
                    "config": {
                      "image": "/local/floorplan/kasinot.svg",
                      "stylesheet": "/local/floorplan/style.css",
                      "rules": [
                        {
                          "entity": "media_player.mio_tv",
                          "tap_action": "more-info",
                          "state_action": {
                            "action": "call-service",
                            "service": "floorplan.class_set",
                            "service_data": "media-player-tv media-player-${entity.state}"
                          }
                        },
                        {
                          "entities": [
                            "group.balcony",
                            "group.living_room",
                            "group.tv_ambient",
                            "group.dining",
                            "group.bedroom",
                            "group.kitchen",
                            "switch.office",
                            "group.hallway"
                          ],
                          "tap_action": false,
                          "state_action": {
                            "action": "call-service",
                            "service": "floorplan.class_set",
                            "service_data": "light-${entity.state}"
                          }
                        },
                        {
                          "entities": [
                            "group.balcony",
                            "group.living_room",
                            "group.tv_ambient",
                            "group.dining",
                            "group.bedroom",
                            "group.kitchen",
                            "switch.office",
                            "group.hallway"
                          ],
                          "tap_action": {
                            "action": "toggle"
                          },
                          "double_tap_action": {
                            "action": "more-info"
                          },
                          "state_action": {
                            "action": "call-service",
                            "service": "floorplan.style_set",
                            "service_data": {
                              "element": "${entity.entity_id.replace(/^(\\w+)\\./, '$1_overlay.')}",
                              "style": ">\nif(entity.state !== \"on\")\n    return \"display: none;\";\nlet hue = 0;\nlet sat = 0;\nif(entity.attributes.hs_color)\n{\n    hue = entity.attributes.hs_color[0];\n    sat = entity.attributes.hs_color[1];\n}\nif(sat < 10)\n{\n  return `\n    display: block;\n    filter:\n      brightness(calc(${entity.attributes.brightness} / 255));\n  `\n}\nreturn `\n  display: block;\n  filter:\n    sepia(100%)\n    hue-rotate(calc(${hue}deg - 55deg))\n    saturate(calc(${sat}% * 2))\n    brightness(calc(${entity.attributes.brightness} / 255));\n`\n"
                            }
                          }
                        },
                        {
                          "entities": [
                            "sensor.office_sensor_temperature",
                            "sensor.office_sensor_humidity",
                            "sensor.balcony_sensor_temperature",
                            "sensor.balcony_sensor_humidity",
                            "sensor.netatmo_airq_temperature",
                            "sensor.netatmo_airq_humidity",
                            "sensor.netatmo_airq_co2"
                          ],
                          "state_action": {
                            "action": "call-service",
                            "service": "floorplan.text_set",
                            "service_data": {
                              "element": "${entity.entity_id}",
                              "text": "> return (entity.state !== undefined) ? entity.state + entity.attributes.unit_of_measurement : \"unknown\";\n"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "custom:mod-card",
                    "card_mod": {
                      "style": ":host {\n  position: absolute;\n  bottom: 6px;\n  right: 6px;\n  width: 265px;\n}\n"
                    },
                    "card": {
                      "type": "custom:auto-entities",
                      "show_empty": false,
                      "filter": {
                        "include": [
                          {
                            "entity_id": "/sensor\\..*battery/",
                            "state": "< 20",
                            "attributes": {
                              "unit_of_measurement": "%"
                            }
                          },
                          {
                            "attributes": {
                              "show_battery_alert": false,
                              "unit_of_measurement": "%"
                            }
                          }
                        ]
                      },
                      "card": {
                        "type": "entities",
                        "theme": "dashboard",
                        "card_mod": {
                          "style": "@keyframes alert {\n  from {\n    background: #ff000033;\n    box-shadow: 0px 0px 0px 1px #f970709e;\n  }\n  to {\n    background: #ff000011;\n    box-shadow: 0px 0px 0px 1px #f9707055;\n  }\n}\nha-card {\n  background: #ffffff14;\n  height: auto !important;\n  transform: translate( 0, 0 );\n  \n  animation: 1s alert linear infinite alternate;\n  box-shadow: 0px 0px 0px 1px #f970709e;\n  background: #ff000033;\n}\n"
                        }
                      }
                    }
                  },
                  {
                    "type": "custom:apexcharts-card",
                    "header": {
                      "show": true,
                      "show_states": true,
                      "colorize_states": true
                    },
                    "graph_span": "6d",
                    "span": {
                      "start": "day"
                    },
                    "apex_config": {
                      "chart": {
                        "height": 300,
                        "width": 600,
                        "background": "transparent",
                        "dropShadow": {
                          "enabled": false
                        }
                      },
                      "grid": {
                        "borderColor": "rgba(255, 255, 255, 0.5)",
                        "strokeDashArray": 5,
                        "xaxis": {
                          "lines": {
                            "show": true
                          }
                        },
                        "yaxis": {
                          "lines": {
                            "show": false
                          }
                        }
                      },
                      "legend": {
                        "show": false
                      },
                      "xaxis": {
                        "type": "datetime",
                        "tickAmount": 6,
                        "position": "top",
                        "axisBorder": {
                          "show": false
                        },
                        "axisTicks": {
                          "show": false
                        },
                        "labels": {
                          "style": {
                            "fontSize": 20
                          },
                          "formatter": "EVAL:function(value) {\n  const date = new Date(value);\n  const options = { weekday: 'short' };\n  return date.toLocaleDateString('en-GB', options);\n}\n"
                        }
                      }
                    },
                    "card_mod": {
                      "style": ":host {\n  position: absolute;\n  bottom: 20px;\n  right: 0;\n}\nha-card {\n  background: transparent;\n  font-size: 1.5rem;\n  text-shadow: 0 0 10px currentColor;\n}\nha-card .wrapper {\n  grid-template-areas: 'graph' 'header';\n}\nsvg path {\n  filter: drop-shadow(0 0 10px currentColor);\n}\n"
                    },
                    "yaxis": [
                      {
                        "id": "main",
                        "opposite": true,
                        "decimals": 0
                      }
                    ],
                    "series": [
                      {
                        "entity": "sensor.weather_forecast_daily",
                        "name": "Temperature (°C)",
                        "type": "line",
                        "color": "var(--primary-color)",
                        "stroke_width": 2,
                        "yaxis_id": "main",
                        "data_generator": "return entity.attributes.forecast.map(f => [new Date(f.datetime).getTime(), f.temperature]);\n"
                      },
                      {
                        "entity": "sensor.weather_forecast_daily",
                        "name": "Wind Speed (m/s)",
                        "type": "line",
                        "color": "pink",
                        "stroke_width": 1,
                        "yaxis_id": "main",
                        "data_generator": "return entity.attributes.forecast.map(f => [new Date(f.datetime).getTime(), f.wind_speed / 3.6]);\n"
                      },
                      {
                        "entity": "sensor.weather_forecast_daily",
                        "name": "Rain (mm)",
                        "type": "area",
                        "color": "lightblue",
                        "stroke_width": 1,
                        "opacity": 0.5,
                        "yaxis_id": "main",
                        "data_generator": "return entity.attributes.forecast.map(f => [new Date(f.datetime).getTime(), f.precipitation]);\n"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  }
}