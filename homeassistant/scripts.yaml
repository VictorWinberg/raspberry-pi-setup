start_video_lights:
  alias: Start Video with Lights
  fields:
    rgb_color:
      description: Color for the light in RGB-format.
      example: 255,255,255
    video:
      description: The YouTube video to play.
      example: https://youtu.be/Wfphn9Dei4k
  sequence:
  - data_template:
      brightness: 255
      entity_id:
      - light.led_strip_lifx
      - light.led_strip_philips
      rgb_color: '{{ rgb_color }}'
    service: light.turn_on
  - condition: template
    value_template: '{{ video is defined }}'
  - service: script.ping_tv
    data: {}
  - service: media_player.play_media
    data_template:
      media_content_type: cast
      media_content_id: '{

        "app_name": "youtube", "media_id": "{{video}}"

        }'
    entity_id: media_player.mio_cast
  - condition: template
    value_template: '{{ song is defined }}'
  - data_template:
      entity_id: media_player.speakers
      random_song: true
      repeat: context
      shuffle: true
      uri: '{{ song }}'
    service: spotcast.start
  mode: single
power_off:
  alias: Power off
  sequence:
  - target:
      entity_id:
      - script.blinds_close
      - script.blinds_open
      - script.good_morning_transition
    data: {}
    action: homeassistant.turn_off
  - entity_id: all
    action: media_player.turn_off
  - data: {}
    target:
      entity_id:
      - switch.bed_strip
      - switch.living_room_plug
      - switch.sonoff_10008c59d6
      - switch.power_strip_socket_1
      - switch.window_plug
      - switch.power_strip_socket_3
    action: switch.turn_off
  - target:
      entity_id: all
    data: {}
    action: light.turn_off
  mode: single
power_on:
  alias: Power on
  sequence:
  - data:
      brightness: 200
      entity_id:
      - light.hallway_door
      - light.hallway_spots
    service: light.turn_on
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.living_room_plug
      - switch.power_strip_socket_3
  - delay: 00:00:01
  - data:
      entity_id:
      - automation.evening_dim_lights
      - automation.sunset_balcony_lights
    service: automation.trigger
  mode: single
hot_night:
  alias: Hot Night
  sequence:
  - data:
      brightness: 255
      rgb_color:
      - 255
      - 0
      - 0
    entity_id: light.philips_hue
    service: light.turn_on
  - data:
      brightness: 200
      rgb_color:
      - 255
      - 0
      - 0
    entity_id: light.bedroom
    service: light.turn_on
  - service: light.turn_on
    data:
      brightness: 4
    entity_id: light.hallway_spots
  mode: single
play_spotify:
  alias: Play Spotify
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ is_state(entity_id, "unavailable") }}'
      sequence:
      - variables:
          entity_id: media_player.kasinot_speaker
    default: []
  - data_template:
      entity_id: '{{ entity_id }}'
      random_song: true
      repeat: context
      shuffle: true
      uri: '{{ states(uri) }}'
      account: '{{ account }}'
    service: spotcast.start
    continue_on_error: true
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - condition: template
    value_template: '{{ not is_state(entity_id, "playing")}}'
  mode: single
blinds_open:
  alias: Blinds Open
  sequence:
  - service: script.turn_off
    target:
      entity_id: script.blinds_close
    data: {}
  - service: cover.open_cover
    data: {}
    target:
      entity_id:
      - cover.bedroom_blind_l
  - delay: 00:00:30
  - service: cover.open_cover
    data: {}
    target:
      entity_id:
      - cover.bedroom_blind_r
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: cover.open_cover
    target:
      entity_id:
      - cover.bedroom_blind_r
    data: {}
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: cover.open_cover
    target:
      entity_id:
      - cover.bedroom_blind_l
    data: {}
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: cover.open_cover
    data: {}
    target:
      entity_id:
      - cover.bedroom_blind_l
      - cover.bedroom_blind_r
  mode: restart
blinds_close:
  alias: Blinds Close
  sequence:
  - service: script.turn_off
    target:
      entity_id: script.blinds_open
    data: {}
  - service: cover.close_cover
    data:
      entity_id:
      - cover.bedroom_blind_l
      - cover.bedroom_blind_r
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: cover.close_cover
    target:
      entity_id:
      - cover.bedroom_blind_l
      - cover.bedroom_blind_r
    data: {}
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: cover.close_cover
    target:
      entity_id:
      - cover.bedroom_blind_l
      - cover.bedroom_blind_r
    data: {}
  mode: restart
good_morning:
  alias: Good Morning
  sequence:
  - data:
      flash: long
    target:
      entity_id:
      - light.philips_hue
    action: light.turn_on
  - data:
      rgb_color:
      - 255
      - 180
      - 65
      brightness_pct: 100
    target:
      entity_id:
      - light.philips_hue
      - light.bedroom
    action: light.turn_on
  - data:
      brightness: 200
      rgb_color:
      - 255
      - 171
      - 1
    target:
      entity_id:
      - light.hallway_door
      - light.hallway_spots
      - light.kitchen_oven
      - light.kitchen_table
      - light.kitchen_sink
    action: light.turn_on
  - data: {}
    target:
      entity_id:
      - switch.sonoff_10008c59d6
      - switch.bed_strip
      - switch.power_strip_socket_3
    action: switch.turn_on
  - data:
      volume_level: 0.25
    target:
      entity_id: media_player.kasinot_speaker
    action: media_player.volume_set
  - data:
      volume_level: 0.15
    target:
      entity_id:
      - media_player.rey
    action: media_player.volume_set
  - data:
      volume_level: 0.15
    target:
      entity_id:
      - media_player.bali
    action: media_player.volume_set
  - data:
      volume_level: 0.15
    target:
      entity_id:
      - media_player.rio
    action: media_player.volume_set
  - data: {}
    entity_id: script.blinds_open
    action: script.turn_on
  - data:
      entity_id: media_player.rey
      uri: input_text.goodnight_playlist
      account: mr
    action: script.play_spotify
  mode: restart
good_night:
  alias: Good Night
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: group.ikea
        state: 'off'
      sequence:
      - service: script.hot_night
        data: {}
    default:
    - service: light.turn_on
      data:
        brightness: 15
        transition: 15
        entity_id:
        - light.philips_hue
        - light.bedroom
    - service: script.turn_on
      data: {}
      entity_id: script.blinds_close
    - delay:
        hours: 0
        minutes: 0
        seconds: 15
        milliseconds: 0
    - service: media_player.volume_set
      data:
        volume_level: 0.05
      target:
        entity_id:
        - media_player.rey
    - service: media_player.volume_set
      data:
        volume_level: 0.1
      target:
        entity_id:
        - media_player.rio
    - service: media_player.volume_set
      data:
        volume_level: 0.1
      target:
        entity_id:
        - media_player.kasinot_speaker
    - service: media_player.volume_set
      data:
        volume_level: 0.2
      target:
        entity_id:
        - media_player.bali
    - service: script.power_off
      data: {}
    - delay:
        hours: 0
        minutes: 0
        seconds: 1
        milliseconds: 0
    - service: light.turn_on
      data:
        brightness: 100
        rgb_color:
        - 255
        - 0
        - 0
      target:
        entity_id: light.philips_hue
    - delay:
        hours: 0
        minutes: 0
        seconds: 1
        milliseconds: 0
    - service: light.turn_on
      data_template:
        brightness: 1
        transition: '{{ states(''input_number.goodnight_transition_time'') | int *
          60 }} '
        rgb_color:
        - 255
        - 0
        - 0
        entity_id: light.philips_hue
    - service: script.play_spotify
      data:
        entity_id: media_player.speakers
        uri: input_text.goodnight_playlist
        account: mr
        continue_on_error: true
    - delay:
        hours: 0
        minutes: 18
        seconds: 0
        milliseconds: 0
    - service: media_player.turn_off
      data: {}
      target:
        entity_id:
        - media_player.speakers
        - media_player.rey
        - media_player.bali
        - media_player.kasinot_speaker
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.philips_hue
  mode: restart
random_light_toggle:
  alias: Random light toggle
  sequence:
  - repeat:
      while:
      - condition: template
        value_template: 'True'
      sequence:
      - service: light.toggle
        data_template:
          entity_id: '{{ states.light | selectattr(''state'',''ne'', ''unavailable'')
            | map(attribute=''entity_id'') | list | random }}'
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
  mode: single
ping_tv:
  alias: Ping TV
  sequence:
  - service: media_player.turn_on
    target:
      entity_id:
      - media_player.mio_cast
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: media_player.turn_off
    target:
      entity_id:
      - media_player.mio_cast
    data: {}
  mode: single
dim_lights:
  sequence:
  - data:
      entity_id:
      - light.hallway_kitchen
      - light.kitchen_oven
      - light.kitchen_sink
    service: light.turn_off
  - data:
      brightness: 20
      entity_id:
      - light.kitchen_table
      - light.hallway_door
      - light.hallway_spots
    service: light.turn_on
  - service: switch.turn_off
    target:
      entity_id: switch.living_room_plug
    data: {}
  - data: {}
    service: switch.turn_on
    target:
      entity_id:
      - switch.window_plug
      - switch.bed_strip
      - switch.power_strip_socket_2
      - switch.power_strip_socket_1
      - switch.power_strip_socket_3
  mode: single
  alias: Dim Lights
disco_lights:
  alias: Disco Lights
  sequence:
  - repeat:
      while:
      - condition: template
        value_template: 'True'
      sequence:
      - service: light.turn_on
        data_template:
          entity_id: '{{ states.light | selectattr(''state'',''ne'', ''unavailable'')
            | selectattr(''attributes.supported_color_modes'', ''search'', "''hs''")
            | map(attribute=''entity_id'') | list | random }}'
          rgb_color:
          - '{{ (range(0, 255) | random) }}'
          - '0'
          - '{{ (range(0, 255) | random) }}'
          brightness: '{{ range(150, 255) | random }}'
          transition: 1
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 20
  mode: single
lifx_mode:
  alias: LIFX - Mode
  sequence:
  - service: lifx.set_state
    data:
      zones:
      - 8
      color_name: slateblue
    target:
      entity_id:
      - light.led_strip_lifx
  - service: lifx.set_state
    data:
      transition: 2
      power: true
      brightness_pct: 90
      rgb_color:
      - 8
      - 18
      - 25
    target:
      entity_id:
      - light.led_strip_lifx
  - service: lifx.set_state
    data:
      zones:
      - 0
      - 15
      color_name: blueviolet
    target:
      entity_id:
      - light.led_strip_lifx
  - service: lifx.set_state
    data:
      zones:
      - 1
      - 14
      color_name: orchid
    target:
      entity_id: light.led_strip_lifx
  - service: lifx.set_state
    data:
      zones:
      - 2
      - 13
      color_name: darkturquoise
    target:
      entity_id: light.led_strip_lifx
  - service: lifx.set_state
    data:
      zones:
      - 3
      - 12
      color_name: mediumseagreen
    target:
      entity_id: light.led_strip_lifx
  - service: lifx.set_state
    data:
      zones:
      - 4
      - 11
      color_name: yellowgreen
    target:
      entity_id: light.led_strip_lifx
  - service: lifx.set_state
    data:
      zones:
      - 5
      - 10
      color_name: orangered
    target:
      entity_id: light.led_strip_lifx
  - service: lifx.set_state
    data:
      zones:
      - 6
      - 9
      color_name: lime
    target:
      entity_id: light.led_strip_lifx
  - service: lifx.set_state
    data:
      zones:
      - 7
      color_name: royalblue
    target:
      entity_id: light.led_strip_lifx
  mode: single
power_off_10_minutes:
  alias: Power off - X minutes
  sequence:
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: script.power_off
    data: {}
  mode: single
good_morning_transition:
  alias: Good Morning Transition
  sequence:
  - data:
      brightness_pct: 1
      rgb_color:
      - 166
      - 44
      - 23
    target:
      entity_id:
      - light.bedroom
      - light.philips_hue
    action: light.turn_on
  - data:
      transition: '{{ states(''input_number.wakeup_transition_time'') | int * 60 }}'
      brightness_pct: 100
      rgb_color:
      - 255
      - 180
      - 65
    target:
      entity_id:
      - light.bedroom
      - light.philips_hue
    action: light.turn_on
  - delay: '{{ states(''input_number.wakeup_transition_time'') | int * 60 }}'
  - action: script.turn_on
    data: {}
    target:
      entity_id:
      - script.good_morning
      - script.annoy_victor
  description: ''
  icon: mdi:weather-sunset-up
annoy_victor:
  alias: Wake Up - Victor
  sequence:
  - condition: state
    entity_id: person.victor
    state: home
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.mr_battery_state
      state: Not Charging
    enabled: true
  - action: media_player.volume_set
    metadata: {}
    data:
      volume_level: 0.5
    target:
      entity_id: media_player.rey
  - data:
      random_song: true
      repeat: context
      shuffle: true
      uri: spotify:playlist:37i9dQZF1DX7CB1M7sBt21
      account: mr
      entity_id: media_player.rey
    action: spotcast.start
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.mr_battery_state
      state: Not Charging
    enabled: true
  - action: tts.google_translate_say
    metadata: {}
    data:
      cache: false
      entity_id: media_player.rey
      message: "{{ [\n  \"Victor, this is your one-minute warning—neutralize the alarm
        before it launches a full-scale auditory assault!\",\n  \"Victor, the countdown
        is active—T-minus 60 seconds until Operation Earstrike. Disarm immediately!\",\n
        \ \"Victor, the alarm is a hostile target; you have one minute to engage and
        eliminate before it breaches sound security!\",\n  \"Victor, command protocol
        initiated: one minute to silence the threat. Failure is not an option soldier!\",\n
        \ \"Victor, enemy alert imminent! Sixty seconds to defuse the situation and
        restore peace to the perimeter.\",\n  \"Victor, the mission is critical—disable
        the alarm before it detonates in one minute. Execute, now!\",\n  \"Victor,
        the battlefield of silence depends on you. One minute to terminate the beeping
        menace!\",\n  \"Victor, sound warfare approaches! Sixty seconds remain to
        neutralize the alarm before it claims auditory dominance.\",\n  \"Victor,
        this is DEFCON 1. You’ve got one minute to silence the alarm before it escalates
        into full-on chaos.\",\n  \"Victor, the alarm is armed and ready to strike.
        Your orders: disarm in 60 seconds or prepare for sonic warfare!\",\n  \"Victor,
        the alarm is a ticking time bomb. You have one minute to defuse it before
        it detonates our peace.\",\n  \"Victor, the clock marches toward disaster.
        Sixty seconds stand between us and an unforgiving siren. Act now!\",\n  \"Victor,
        we are on the brink of pandemonium. The alarm will unleash its wrath in one
        minute. Stop it, or brace yourself!\",\n  \"Victor, the final countdown has
        begun—one minute until the alarm tears through the silence like a storm. Intervene
        now!\",\n  \"Victor, the alarm is a relentless force, poised to strike in
        sixty seconds. Your swift action is our only hope.\",\n  \"Victor, the sands
        of tranquility slip away. You have one minute to silence the alarm before
        it shatters our fragile calm.\",\n  \"Victor, the approaching alarm is a harbinger
        of chaos. Sixty seconds remain to prevent an auditory apocalypse.\",\n  \"Victor,
        the alarm lies dormant, but its fury will awaken in one minute. You alone
        can prevent this disaster.\",\n  \"Victor, the peace we hold is fragile—one
        minute until the alarm descends upon us. Quell the chaos before it’s too late!\",\n
        \ \"Victor, destiny demands your action—sixty seconds before the alarm brings
        an unstoppable storm of sound. Do not fail us!\"\n] | random }}\n"
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - repeat:
      sequence:
      - action: tts.google_translate_say
        metadata: {}
        data:
          cache: false
          entity_id: media_player.rey
          message: "{{ [\n  \"Victor, it’s about to go off! Stop it now!\",\n  \"Victor,
            seconds left! Shut it down!\",\n  \"Victor, the alarm is imminent! Do
            something!\",\n  \"Victor, act now! It’s about to start!\",\n  \"Victor,
            it’s seconds away! Silence it!\",\n  \"Victor, hurry! The alarm is coming!\",\n
            \ \"Victor, stop it! The alarm is here!\",\n  \"Victor, no time left!
            End it now!\",\n  \"Victor, quick! It’s about to sound!\",\n  \"Victor,
            do it now! The alarm is ready!\",\n  \"Victor, the alarm is here! Move
            now!\",\n  \"Victor, seconds! Silence it, fast!\",\n  \"Victor, no time!
            Turn it off now!\",\n  \"Victor, it’s coming! Stop it immediately!\",\n
            \ \"Victor, the alarm will hit! Act now!\",\n  \"Victor, now or never!
            Stop the alarm!\",\n  \"Victor, it’s happening! Do something now!\",\n
            \ \"Victor, emergency! Silence it now!\",\n  \"Victor, final seconds!
            Shut it off!\",\n  \"Victor, it’s starting! Stop it, hurry!\"\n] | random
            }}\n"
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - action: spotcast.start
        metadata: {}
        data:
          limit: 20
          force_playback: false
          repeat: track
          uri: spotify:track:67euHrPxIzKpzpSRLeIKhU
          entity_id: media_player.rey
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      while:
      - condition: not
        conditions:
        - condition: state
          entity_id: sensor.mr_battery_state
          state: Not Charging
  description: ''
